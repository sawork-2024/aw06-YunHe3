/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.3.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.micropos.api;

import com.micropos.model.CartDto;
import com.micropos.model.ErrorDto;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-05-14T18:40:21.838381+08:00[Asia/Shanghai]")
@Validated
@Api(value = "checkout", description = "the checkout API")
public interface CheckoutApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /checkout : checkout a cart
     *
     * @param cartDto The cart to checkout (required)
     * @return Expected response to a valid request (status code 200)
     *         or Unexpected error (status code 200)
     */
    @ApiOperation(value = "checkout a cart", nickname = "checkout", notes = "", response = Double.class, tags={ "counter", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Expected response to a valid request", response = Double.class),
        @ApiResponse(code = 200, message = "Unexpected error", response = ErrorDto.class) })
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/checkout",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<Double> checkout(@ApiParam(value = "The cart to checkout", required = true) @Valid @RequestBody CartDto cartDto) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
